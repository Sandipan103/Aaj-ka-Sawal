// 1st approach :  tc = O(N)   sc O(N) + O(N)   

class Solution {
public:
    bool isIsomorphic(string s, string t) {
        map<char, char> mp;
        for(int i=0; i<s.length(); i++) {
            if(mp.find(t[i]) == mp.end())   mp[t[i]] = s[i];
            else if(mp[t[i]] != s[i]) return false;
        }
        mp.clear();
        for(int i=0; i<s.length(); i++) {
            if(mp.find(s[i]) == mp.end())   mp[s[i]] = t[i];
            else if(mp[s[i]] != t[i]) return false;
        }
        return true;
    }
};


// 2nd approach :   tc = O(N)   sc O(1)

class Solution {
public:
    bool isIsomorphic(string s, string t) {
        int ht[256] = {0}, hs[256] = {0};

        for(int i=0; i<s.length(); i++) {
            if(hs[s[i]] != ht[t[i]])    return false;
            hs[s[i]] = ht[t[i]] = i+1;
        }
        
        return true;
    }
};
